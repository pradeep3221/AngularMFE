# Multi-stage build for MFE3 Authentication Portal
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install Angular CLI globally
RUN npm install -g @angular/cli

# Install dependencies
RUN npm ci --legacy-peer-deps

# Copy source code
COPY . .

# Build the MFE3 application
RUN npm run build:mfe3

# Production stage
FROM nginx:alpine

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Copy built application
COPY --from=builder /app/dist/mfe3-auth/browser /usr/share/nginx/html

# Add security headers and CSP configuration
RUN echo 'add_header X-Frame-Options "SAMEORIGIN" always;' > /etc/nginx/conf.d/security.conf && \
    echo 'add_header X-Content-Type-Options "nosniff" always;' >> /etc/nginx/conf.d/security.conf && \
    echo 'add_header X-XSS-Protection "1; mode=block" always;' >> /etc/nginx/conf.d/security.conf && \
    echo 'add_header Referrer-Policy "strict-origin-when-cross-origin" always;' >> /etc/nginx/conf.d/security.conf && \
    echo 'add_header Content-Security-Policy "default-src '\''self'\''; script-src '\''self'\'' '\''unsafe-inline'\'' '\''unsafe-eval'\'' https://login.microsoftonline.com https://*.b2clogin.com; style-src '\''self'\'' '\''unsafe-inline'\'' https://fonts.googleapis.com https://cdnjs.cloudflare.com; font-src '\''self'\'' https://fonts.gstatic.com https://cdnjs.cloudflare.com; img-src '\''self'\'' data: https:; connect-src '\''self'\'' https://login.microsoftonline.com https://*.b2clogin.com https://graph.microsoft.com ws://localhost:* http://localhost:*; frame-src https://login.microsoftonline.com https://*.b2clogin.com;" always;' >> /etc/nginx/conf.d/security.conf

# Create nginx configuration for MFE3
RUN echo 'server {' > /etc/nginx/conf.d/mfe3.conf && \
    echo '    listen 80;' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    server_name localhost;' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    root /usr/share/nginx/html;' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    index index.html;' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    # Enable gzip compression' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    gzip on;' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    gzip_vary on;' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    gzip_min_length 1024;' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    # Cache static assets' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '        expires 1y;' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '        add_header Cache-Control "public, immutable";' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    }' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    # Handle Angular routing' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    location / {' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '        try_files $uri $uri/ /index.html;' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '        add_header Cache-Control "no-cache, no-store, must-revalidate";' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '        add_header Pragma "no-cache";' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '        add_header Expires "0";' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    }' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    # Health check endpoint' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    location /health {' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '        access_log off;' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '        return 200 "healthy\n";' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '        add_header Content-Type text/plain;' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '    }' >> /etc/nginx/conf.d/mfe3.conf && \
    echo '}' >> /etc/nginx/conf.d/mfe3.conf

# Expose port 80
EXPOSE 80

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
